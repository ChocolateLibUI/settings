var d=Object.defineProperty;var g=(s,e,t)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var a=(s,e,t)=>(g(s,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerpolicy&&(i.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?i.credentials="include":n.crossorigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();let c={},m=(s,e,t)=>(c[s]=new u(s,e,t),c[s]);class u{constructor(e,t,r){a(this,"pathID");a(this,"settings",{});a(this,"subGroups",{});a(this,"name");a(this,"description");this.pathID=e,this.name=t,this.description=r}makeSubGroup(e,t,r){if(e in this.subGroups){console.warn("Sub group already registered "+e);return}else return this.subGroups[e]=new u(this.pathID+"/"+e,t,r)}async addState(e,t,r,n=void 0){if(e in this.settings)throw new Error("Settings already registered "+e);let i=localStorage[this.pathID+"/"+e];i?r(JSON.parse(i)):n!==void 0&&r(await n),t.subscribe(o=>{localStorage[this.pathID+"/"+e]=JSON.stringify(o)},!i),this.settings[e]=t}}const p="@chocolatelibui/settings";let l=m(p,"Test Settings","Description of test settings");(async()=>{let s=l.makeBooleanSetting("TestBool","","",!1),e=document.createElement("input");e.type="checkbox",document.body.appendChild(e),e.checked=await s.get,e.addEventListener("change",o=>{s.set=e.checked});let t=l.makeNumberSetting("TestNumber","","",10,2,99),r=document.createElement("input");r.type="number",r.min=String(t.min),r.max=String(t.max),document.body.appendChild(r),r.value=String(await t.get),r.addEventListener("change",async o=>{t.set=Number(r.value),r.value=String(await t.get)});let n=l.makeStringSetting("TestString","","","asdf",void 0,10),i=document.createElement("input");document.body.appendChild(i),i.value=await n.get,i.addEventListener("change",async o=>{n.set=i.value,i.value=await n.get})})();
